#FIREGIRL WORKFLOW


#USING NEW FIREGIRL LANDSCAPES
FGPolOpt = FireGirlPolicyOptimzer()
FGPolOpt.createFireGirlLandscapes(100, 100, None)
#since no policy is passed in, the creation routine above will make a generic 50/50 policy
FGPolOpt.optimizePolicy()

#USING PRE-CREATED FIREGIRL LANDSCAPES and a NEW POLICY
FGPolOpt = FireGirlPolicyOptimizer()
FGPolOpt.loadFireGirlLandscapes('filename')
FGPolOpt.setNewPolicy()
FGPolOpt.optimizePolicy()

#USING PRE-CREATED FIREGIRL LANDSCAPES and an EXISTING POLICY
FGPolOpt = FireGirlPolicyOptimizer()
FGPolOpt.loadFireGirlLandscapes('filename')
FGPolOpt.loadPolicy('policy_filename')
FGPolOpt.optimizePolicy()

#USING FIREWOMAN LANDSCAPES
FGPolOpt = FireGirlPolicyOptimizer()
FGPolOpt.loadFireWomanLandscapes('filename')
FGPolOpt.loadPolicy('policy_filename')
FGPolOpt.optimizePolicy()





#FIREGIRL CLASS STRUCTURE

class FireGirlPolicyOptimizer
    #Functions intended to be Public
    function createFireGirlLandscapes(landscape_count, years, Policy_object=None)
    function loadFireGirlLandscapes(filename)
    function loadFireWomanLandscapes(filename)
    function setNewPolicy()
    function loadPolicy(filename)
    function optimizePolicy()

    #Functions intended to be Private
    function calcLandscapeWeights()
    function calcObjFn(b=None)
    function calcObjFPrime(b=None)


class FireGirlLandscape
    #functions which are relevant to both FireGirl and FireWoman landscapes
    function getIgnitionCount()
    function assignPolicy(Policy)
    function resetPolicy()
    function calcTotalProb()
    function getNetValue()

    #functions specific to FireGirl-style landscapes
    function makeNewFireGirlLS()
    function doFire()
    function doLogging()
    function doGrowth()
    function doOneYear()
    function doYears()
    function getIgnLoc()
    function getWeather(date)


class FireGirlPolicy
    function __init__(self, params=None, SETALL=None, COUNT=None)
    function setParams(parameter_list)
    function calcProb(feature_list)
    function logistic(x)
    function crossProduct()


class FireGirlIgnitionRecord
    list    self.features[]
    numeric self.policy_prob
    boolean self.policy_choice
    list    self.outcomes[]